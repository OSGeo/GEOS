version: 1.0.{build}

image: Visual Studio 2017

platform:
  - x64
  - win32

configuration:
  - Release
  - Debug

shallow_clone: true
clone_depth: 5

matrix:
  fast_finish: false # set this flag to immediately finish build once one of the jobs fails.

environment:
  matrix:
    - G: "Visual Studio 15 2017"
    - G: "Visual Studio 14 2015"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

init:
  - ps: 'Write-Host "Building GEOS branch: $env:APPVEYOR_REPO_BRANCH" -ForegroundColor Magenta'

install:
  - ps: Write-Host "Checking version of CMake latest release" -ForegroundColor Magenta;
  - ps: |
      $cmakeDownloadPage = Invoke-WebRequest 'https://cmake.org/download/'
      $latestVersion = ($cmakeDownloadPage.AllElements | `
          Where {$_.tagName -match 'H3' -and $_.innerText -match "Latest Release" } | `
          Select-Object -ExpandProperty InnerText).Trim();
      if ($latestVersion -match 'Latest Release\s+\((\d+\.\d+\.\d+)\)') {
          $latestVersion = $matches[1]
      } else {
          Write-Host 'Failed to extract version of latest release';
          exit 1;
      }
      $major, $minor, $micro = $latestVersion.split('.');
      $cmakeDir = ('cmake-{0}.{1}.{2}-win64-x64' -f $major, $minor, $micro);
      $cmakeZip = ('{0}.zip' -f $cmakeDir);
      $cmakeUrl = ('https://cmake.org/files/v{0}.{1}/{2}' -f $major, $minor, $cmakeZip);
      Write-Host "Installing $cmakeUrl" -ForegroundColor Magenta;
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;
      $cmakeZip = ('C:\{0}' -f $cmakeZip);
      (New-Object System.Net.WebClient).DownloadFile($cmakeUrl, $cmakeZip);
      Expand-Archive $cmakeZip -DestinationPath C:\
      $env:Path = ('C:\{0}\bin;{1}' -f $cmakeDir, $env:Path);
  - cmake --version

before_build:
  - ps: 'Write-Host "Configuring $env:PLATFORM build using $env:G" -ForegroundColor Magenta'
  - cmake -S . -B build -G "%G%" -A %PLATFORM% -DCMAKE_GENERATOR_TOOLSET=host=x64

build_script:
  - ps: 'Write-Host "Building $env:CONFIGURATION configuration" -ForegroundColor Magenta'
  - cmake --build build --config %CONFIGURATION%

test_script:
  - ps: 'Write-Host "Running tests" -ForegroundColor Magenta'
  - cd build
  - ctest --build-config %CONFIGURATION% --show-only
  - ctest --build-config %CONFIGURATION% -VV
